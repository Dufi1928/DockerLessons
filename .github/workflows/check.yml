name: CI/CD Pipeline
on: push
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Install dependencies
                run: npm ci
            -   name: Run tests
                run: npm test
    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
        -   name: Checkout
            uses: actions/checkout@v4
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v3
        -   name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
        -   name: Login to DockerHub
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
        -   name: Build and push Docker image
            uses: docker/build-push-action@v5
            with:
                context: .
                push: true
                tags: dufi1928/mon-app-de-biere:latest
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Deploy to Docker Swarm
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST_MANAGER }}
                    username: ${{ secrets.MANA_USERNAME }}
                    key: ${{ secrets.MANA_SSH }}
                    script: |
                        if ! docker service ls | grep -q my-next-app; then
                            echo "Creating new service my-next-app"
                            docker service create --name my-next-app --with-registry-auth dufi1928/mon-app-de-biere:latest
                        else
                            echo "Service my-next-app already exists, updating..."
                            docker service update --image dufi1928/mon-app-de-biere:latest --with-registry-auth my-next-app
                        fi